<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">


<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<style>.MTcontainer { min-height: 67px; }</style>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<script type="text/javascript" src="../scripts/lang-lua.js"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="3DSMAX" />
      <meta name="release" content="NA" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-04-23" />
      <meta name="topicid" content="GUID-B55E815E-DB12-4DF5-B745-986675684CC0" />
      <meta name="topic-type" content="concept" />
      <meta name="parent-id" content="GUID-3EEB82D8-8B8C-4503-9BD4-74C7693EB705" />
      <title>Lua Examples</title>
      <link rel="stylesheet" type="text/css" href="../style/adsk.cpm.css" />
      <link rel="stylesheet" type="text/css" href="../style/sdk-custom-html.css" /><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/adsk.strings.js"></script><script type="text/javascript" src="../scripts/adsk.common.js"></script><script type="text/javascript" src="../scripts/adsk.highlight.js"></script><script type="text/javascript" src="../scripts/common-processing.js"></script><script src="../scripts/multireflink.js" type="text/javascript"></script><script type="text/javascript">
</script><script type="text/javascript">
                        function toggleContents()
                        { 
                            if (top.document.body.cols == "0,100") 
                            { top.document.body.cols = "30,70"; }
                            else { top.document.body.cols = "0,100"; }
                        }
                        </script>
                        
<script type="text/javascript">
	var DocOnlineVersions = [];
	var DocDownloads = [];
</script>
<script type="text/javascript" src="https://gameware.autodesk.com/beast/developer/doc/2015/documentation/docdata.js"></script>
<script type="text/javascript" src="../scripts/doclinks.js"></script></head>
   <body height="100%" onload="javascript:initFrame('files/GUID-B55E815E-DB12-4DF5-B745-986675684CC0.htm',                           'd30e17911','index.html',location.hash);                           javascript:initPage('Lua Examples','Beast Documentation');                           javascript:convSymbols();                           ; javascript:prettyPrint()" onclick="closeRefLinkDiv();"><div align="right" id="DocLinks"></div><script type="text/javascript">PrintDocLinks()</script>
      <div class="head">
         <div class="head-block">
            <div class="nav-group">
               <!--browse buttons-->
               <div class="browse">
                  <nobr>
                     <div class="headNavLinkToggleToc"><div id="ToggleTocTitle" style="display:none">Toggle the navigation pane</div><a href="GUID-B55E815E-DB12-4DF5-B745-986675684CC0.htm" target="content" onClick="javascript: toggleContents();" class="headNavLink" onmouseover="showInfo(document.getElementById('ToggleTocTitle').innerHTML);" onmouseout="hideInfo();"><img src="../images/toggle_navigation.gif" border="0"></a></div><div class="headNavLinkAddToFav">
                        <div id="AddFavTitle" style="display:none">Add to Favorites</div><a href="GUID-B55E815E-DB12-4DF5-B745-986675684CC0.htm" class="headNavLink" onclick="javascript:top.HlpSys.favorites.addToFavorites(document);" onmouseover="showInfo(document.getElementById('AddFavTitle').innerHTML);" onmouseout="hideInfo();"><img src="../images/add_favorite.gif" border="0" /></a></div>
                     <div class="headNavLinkHome">
                        <div id="homeTitle" style="display:none">Home: Beast Documentation</div><a href="mePortal.htm" target="content" class="headNavLink" onmouseover="showInfo(document.getElementById('homeTitle').innerHTML);" onmouseout="hideInfo();"><img src="../images/nav-home-xp.gif" border="0" /></a></div>
                     <div class="headNavLinkShare">
                        <div id="shareTitle" style="display:none">Share</div><a href="#" target="content" class="headNavLink" onmouseover="showInfo(document.getElementById('shareTitle').innerHTML);" onmouseout="hideInfo();" onclick="window.location='mailto:?subject= Lua Examples&amp;body=' + window.location; return false;"><img src="../images/nav-share.gif" border="0" /></a></div>
                     <div class="headNavLinkPrint">
                        <div id="printTitle" style="display:none">Print</div><a href="#" target="content" class="headNavLink" onmouseover="showInfo(document.getElementById('printTitle').innerHTML);" onmouseout="hideInfo();" onclick="window.print()"><img src="../images/nav-print.gif" border="0" /></a></div><span class="home-button-separator">&nbsp;</span><div class="headNavLinkPrev">
                        <div id="prevTitle" style="display:none">Lua Reference</div><a href="GUID-3EEB82D8-8B8C-4503-9BD4-74C7693EB705.htm" class="headNavLink" onmouseover="showInfo(document.getElementById('prevTitle').innerHTML);" onmouseout="hideInfo();"><img src="../images/nav-prev-xp.gif" border="0" /></a></div>
                     <div class="headNavLinkUp">
                        <div id="parentTitle" style="display:none">Lua Reference</div><a href="GUID-3EEB82D8-8B8C-4503-9BD4-74C7693EB705.htm" class="headNavLink" onmouseover="showInfo(document.getElementById('parentTitle').innerHTML);" onmouseout="hideInfo();"><img src="../images/nav-up-xp.gif" border="0" /></a></div>
                     <div class="headNavLinkNext"><img src="../images/nav-null-xp.gif" border="0" /></div>
                  </nobr>
               </div>
               <!--end browse buttons-->
            </div>
            <div class="button-info"><span id="infoline">&nbsp;</span></div>
            <div class="ancestry"><a href="GUID-3EEB82D8-8B8C-4503-9BD4-74C7693EB705.htm"> Lua Reference</a>&nbsp;&gt;&nbsp;
            </div>
            <div class="MTcontainer"><!-- begin MT --><div id="MicrosoftTranslatorWidget" style="float:right; width: 330px; min-height: 57px; border-color: #170D07; background-color: #362F2A"><noscript><a href="http://microsofttranslator.com">Translate this page</a><br />Powered by <a href="http://www.bing.com/translator">Microsoft® Translator</a></noscript></div> <script type="text/javascript"> /* <![CDATA[ */ setTimeout(function() { if (location && location.href && location.href.indexOf('mk:@MSITStore:') == 0) { return; } var s = document.createElement("script"); s.type = "text/javascript"; s.charset = "UTF-8"; s.src = ((location && location.href && location.href.indexOf('https') == 0) ? "https://ssl.microsofttranslator.com" : "http://www.microsofttranslator.com" ) + "/ajax/v2/widget.aspx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&layout=ts&mode=manual&from=en&category=5297189e-446b-459e-ae1d-9d0360400781_tech&toolbar=none&hidelanguages="; var p = document.getElementsByTagName('head')[0] || document.documentElement; p.insertBefore(s, p.firstChild); }, 0); /* ]]> */ </script><!-- end MT -->
			<div class="head-text"><span class="anchor_wrapper"><a name="GUID-7C905658-D665-4B01-AEED-B30A30A29FA9"></a></span><h1> Lua Examples</h1>
            </div></div>
         </div>
      </div>
      <div class="head-margin">&nbsp;</div>
      <div style="line-height: 0pt">&nbsp;</div>
      <div class="head-margin">&nbsp;</div>
      <div class="body_content"><span class="anchor_wrapper"><a name="GUID-B55E815E-DB12-4DF5-B745-986675684CC0"></a></span>
         <!--Body--><p><span class="anchor_wrapper"><a name="GUID-8DCEA59F-FA6A-4ACC-9ABC-D9CD42C334FC"></a></span> This page provides some examples of Lua bake scripts that can be provided to a Lua render pass in order to achieve some commonly
            used effects. 
         </p>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_75DAE74B6BE248DE82B6120F3F08F435"></a></span> 
            <h2><a name="TOC_ENTRY__d30e17919"></a><span class="anchor_wrapper"><a name="GUID-B1BD6C74-9724-4209-B59F-272BBB1C7F96"></a></span>Occlusion
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-5372F18E-1688-45A8-9B72-DD8265DA56D8"></a></span>This example shows a very simple use of occlusion. It bakes red for surfaces that are in occlusion relative to the first light
               source, and green otherwise. 
            </p> 
            <div class="codeBlock"><span class="anchor_wrapper"><a name="LANG-LUA"></a></span><pre class="prettyprint lang-lua">function bake()
    -- Check for occluders between here and light source number one.
    occ = shootOccRay(getPoint(), getLightDir(1))
    if (occ &gt; 0) then
        return {1,0,0,1}  -- Red
    else
        return {0,1,0,1}  -- Green
    end
end</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_7645055BD10C401485D298184AB88E9D"></a></span> 
            <h2><a name="TOC_ENTRY__d30e17930"></a><span class="anchor_wrapper"><a name="GUID-FA54DDE2-87B0-49CF-8D70-375D43679C1B"></a></span>Radiosity Normal Maps (RNM)
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-300A63A2-BEAD-467C-A475-39000C46BD2A"></a></span>This example shows a typical setup for baking indirect illumination to Radiosity Normal Maps. Note that there are multiple
               different standard definitions in existence for the three RNM basis vectors. 
            </p> 
            <div class="codeBlock"><span class="anchor_wrapper"><a name="LANG-LUA"></a></span><pre class="prettyprint lang-lua">function setup()
    -- Sampling hemispherically in tangent space.
    bset("gather.sampletype", "indirect illumination")
    bset("gather.space", "tangent space")
    bset("gather.distribution", "equiareal")
    bset("gather.minsamples", 300)
    bset("gather.maxsamples", 600)
    bset("gather.coneangle", 180)

    bset("output.size", 9)
end

function bake()
    -- Basis definition.
    basis1 = vec3(0.8165, 0.0, 0.577)
    basis2 = vec3(-0.408, 0.707, 0.577)
    basis3 = vec3(-0.408, -0.707, 0.577)

    rgb1 = getSampleProjectedSum(basis1, false)
    rgb2 = getSampleProjectedSum(basis2, false)
    rgb3 = getSampleProjectedSum(basis3, false)

    n = getSampleCount()
    rgb1 = (rgb1 * 2.0) / n
    rgb2 = (rgb2 * 2.0) / n
    rgb3 = (rgb3 * 2.0) / n

    result = {rgb1[1], rgb1[2], rgb1[3],
              rgb2[1], rgb2[2], rgb2[3],
              rgb3[1], rgb3[2], rgb3[3]}

    return result
end</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_732C49BB2AE14EBCAD75E4B6C5978122"></a></span> 
            <h2><a name="TOC_ENTRY__d30e17941"></a><span class="anchor_wrapper"><a name="GUID-EBB3F88F-DC39-4B15-8BA4-913CA530C49B"></a></span>Spherical Harmonics (SH)
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-E055C3F2-0E61-48D6-9649-493775AEF0D6"></a></span>This example shows a typical setup for baking indirect illumination to Spherical Harmonics. It uses three SH, one for each
               color channel. Each SH has two bands. This makes a total of 12 components. The <span class="code" translate="no">bake()</span> function here is actually implicit. Unless you want to rearrange the components or perform other operations, then removing
               the <span class="code" translate="no">bake()</span> function completely will render the same result. 
            </p> 
            <div class="codeBlock"><span class="anchor_wrapper"><a name="LANG-LUA"></a></span><pre class="prettyprint lang-lua">shbands = 2;
shbasiscount = shbands*shbands;

function setup()
    -- Sampling spherically in world space.
    bset("gather.sampletype", "indirect illumination")
    bset("gather.space", "world space")
    bset("gather.distribution", "equiareal")
    bset("gather.minsamples", 700)
    bset("gather.maxsamples", 1000)
    bset("gather.coneangle", 360)

    bset("basis.type", "sh")
    bset("basis.rgb", true)
    bset("basis.sh.bands", shbands)

    bset("output.size", 3 * shbasiscount)
end

function bake()
    red = getBasisCoefficients(1)
    grn = getBasisCoefficients(2)
    blu = getBasisCoefficients(3)

    result = {}
    for i = 1, shbasiscount do
        result[i] = red[i]
    end
    for i = 1, shbasiscount do
        result[i + shbasiscount] = grn[i]
    end
    for i = 1, shbasiscount do
        result[i + 2*shbasiscount] = blu[i]
    end

    return result
end</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_5860394AF0084F7E9D186025588F8E00"></a></span> 
            <h2><a name="TOC_ENTRY__d30e17958"></a><span class="anchor_wrapper"><a name="GUID-63092976-895C-41DC-AFEE-A6C0687CAABD"></a></span>Dominant light direction
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-6EF04537-0979-4777-A913-7A3E25918717"></a></span>This example demonstrates a Dominant Light Direction pass. Unlike the fixed RNM basis vectors, it projects lighting onto the
               normal direction and the direction of the most incoming lighting. The dominant light direction is derived from the second
               SH band. Note that the example is working in tangent space, taking only the upper hemisphere into account. 
            </p> 
            <div class="codeBlock"><span class="anchor_wrapper"><a name="LANG-LUA"></a></span><pre class="prettyprint lang-lua">function setup()
    -- Sampling hemispherically in tangent space.
    bset("gather.sampletype", "indirect illumination")
    bset("gather.space", "tangent space")
    bset("gather.distribution", "equiareal")
    bset("gather.minsamples", 300)
    bset("gather.maxsamples", 600)
    bset("gather.coneangle", 180)

    bset("basis.type", "sh")
    bset("basis.rgb", true)
    bset("basis.sh.bands", 4)
    bset("output.size", 8)
end

function bake()
    -- Tangent space directions to get illumination from.
    normal = vec3(0.0, 0.0, 1.0)
    lightDir = dominantLight()

    -- Project indirect light onto those directions.
    if lightDir == vec3(0.0, 0.0, 0.0) then
        rgb1 = {0.0, 0.0, 0.0} -- No dominant light direction, no light.
    else
        rgb1 = getSampleProjectedSum(lightDir, false)
    end
    
    rgb2 = getSampleProjectedSum(normal, false)

    n = getSampleCount()
    rgb1 = (rgb1 * 2.0) / n
    rgb2 = (rgb2 * 2.0) / n
    
    -- Output indirect lighting projected on normal and dominant light direction.
    -- Dominant light direction stored in LDR alpha channel.
    result = {rgb1[1], rgb1[2], rgb1[3], lightDir[1]/2+0.5,
              rgb2[1], rgb2[2], rgb2[3], lightDir[2]/2+0.5}

    return result
end

function dominantLight()
    coefficients = getBasisCoefficients(0)

    -- Get dominant light direction from second band sh coefficients.
    dir = vec3(coefficients[4], coefficients[2], math.max(0.0, coefficients[3]))

    if length(dir) &gt; 0.000001 then
        return normalize(dir)
    else
        -- Can't find a proper direction, at least not in this hemisphere.
        return vec3(0.0, 0.0, 0.0)
    end
end</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_0568CC9676634127841E86205DBF16DB"></a></span> 
            <h2><a name="TOC_ENTRY__d30e17969"></a><span class="anchor_wrapper"><a name="GUID-E1A15A49-4137-4AF5-BDEC-8928E67CA0D7"></a></span>Direct lighting
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-DAD77DA3-3BBD-4CDB-8011-3D8E8EC35C85"></a></span>This example demonstrates how to include direct lighting from certain light sources. You can add a light loop in the <span class="code" translate="no">bake()</span> function that projects the direct light contribution onto the basis. This example shows how it can be done with RNM, but
               the same principle applies to other basis types like SH. 
            </p> 
            <div class="codeBlock"><span class="anchor_wrapper"><a name="LANG-LUA"></a></span><pre class="prettyprint lang-lua">function setup()
    -- Sampling hemispherically in tangent space.
    bset("gather.sampletype", "indirect illumination")
    bset("gather.space", "tangent space")
    bset("gather.distribution", "equiareal")
    bset("gather.minsamples", 300)
    bset("gather.maxsamples", 600)
    bset("gather.coneangle", 180)

    bset("output.size", 9)
end

function bake()
    -- Basis definition.
    basis1 = vec3(0.8165, 0.0, 0.577)
    basis2 = vec3(-0.408, 0.707, 0.577)
    basis3 = vec3(-0.408, -0.707, 0.577)

    rgb1 = getSampleProjectedSum(basis1, false)
    rgb2 = getSampleProjectedSum(basis2, false)
    rgb3 = getSampleProjectedSum(basis3, false)

    n = getSampleCount()
    rgb1 = (rgb1 * 2.0) / n
    rgb2 = (rgb2 * 2.0) / n
    rgb3 = (rgb3 * 2.0) / n

    -- Direct light loop.
    nlights = getLights()
    for i = 1, nlights do
            if not (getLightInd(i)) then
            -- Add lambert shaded light source contibution for each basis vector.
            col = getLightCol(i)
            weight = getLightLambertianReflectance(i, gatherToWorld(basis1))
            if (weight &gt; 0) then
                rgb1 = rgb1 + col * weight
            end
            weight = getLightLambertianReflectance(i, gatherToWorld(basis2))
            if (weight &gt; 0) then
                rgb2 = rgb2 + col * weight
            end
            weight = getLightLambertianReflectance(i, gatherToWorld(basis3))
            if (weight &gt; 0) then
                rgb3 = rgb3 + col * weight
            end
        end
    end

    result = {rgb1[1], rgb1[2], rgb1[3],
              rgb2[1], rgb2[2], rgb2[3],
              rgb3[1], rgb3[2], rgb3[3]}

    return result
end</pre></div> 
         </div>
         <div class="footer-block"><a href="javascript:doComments('../html/ac.cmtdialog.htm');"><span class="comments-link">Please send us your comment about this page</span></a></div><br /></div>
   <div id="reflinkdiv" style="display:none; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div><script type="text/javascript">
    if (document.location.protocol == "http:" || document.location.protocol == "https:")
	{
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	}
</script>
<script type="text/javascript">
    if (document.location.protocol == "http:" || document.location.protocol == "https:")
	{
		try {
			var pageTracker = _gat._getTracker("UA-2967772-176");
			pageTracker._trackPageview();
		} catch(err) {}
	}
</script>
    
</body>
</html>